Metadata-Version: 1.1
Name: django-multiorg
Version: 0.1
Summary: Allow users to view a Django application as a member of different organizations.
Home-page: http://github.com/experimentengine/django-multiorg/
Author: Jeremy Boyd
Author-email: jeremy.boyd@experimentengine.com
License: BSD License
Description: django-multiorg
        ===============
        Allow users to view a Django application as a member of different organizations.
        
        Implementation details modeled on [django-masquerade](https://bitbucket.org/technivore/django-masquerade/).
        
        Using django-multiorg
        ---------------------
        django-multiorg is agnostic about your current user/organization makeup. In fact, it was developed in an architecture where users were members of only one organization.
        
        All that's required is that the user model (per Django's `get_user_model`) have an M2M relationship with the organization model.
        
        However, since we don't make any assumptions about your project's architecture, some configuration is required. All settings should be placed in your Django project's settings. 
        
        Required configurations:
        
        * `MULTIORG_ORGANIZATION_MODEL`: the model your User model has an M2M relationship with. Example: `'companies.Company'`.
        * `MULTIORG_ORGANIZATION_ATTR`: the name of the attribute on the User model for this M2M relationship. Example: `'companies'`.
        * `MULTIORG_ORGANIZATION_DEFAULT_ATTR`: the name of the attribute on the User model to use as a default, if no org has been adopted. Example: `company`.  
        
        Optional configurations:
        
        * `MULTIORG_REDIRECT_URL`: the path the user should be redirected to after adopting an organization. Default: `'/'`.
        * `MULTIORG_NEXT_PARAM_NAME`: the name of a GET/POST param that contains a destination for redirects after organization adoption. Default: `'next_url'`.
        
        
Platform: UNKNOWN
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
